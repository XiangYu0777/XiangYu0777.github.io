{"relevantArticles":[{"articleTitle":"MySQL 慢查询优化","articleAbstractText":"建立索引的五大原则 最左前缀匹配原则。 \u201c=\u201d 和 \u201cin\u201d 可以乱序。 尽量选择区分度高的列作为索引。 索引列不能参与计算。 尽量扩展索引，不要新建索引。 查询优化神器 - explain命令 慢查询优化基本步骤 先运行看看是否真的很慢，注意设置 SQL_NO_CACHE where条件单表查，锁定最小返回记录表。这句话的意思是把查询语句的where都应用到表中返回的记录数最小的表开始查起，单表每个字段分别查询，看哪个字段的区分度最高 explain查看执行计划，是否与1预期一致（从锁定记录较少的表开始查询） order by limit 形式的 sql 语句让排序的表优先查 了解业务方使用场景 加索引时参照建索引的几大原则 观察结果，不符合预期继续从0分析","articleStatus":0,"articlePermalink":"/articles/2018/03/28/1522195200160.html","articleImg1URL":"https://b3logfile.com/bing/20190222.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Redis Snippet","articleAbstractText":"基本数据类型 字符串 string、列表 list、无序集合 set、有序集合 zset、散列表 hash。 支持的特性 将内存中的数据持久化到硬盘 使用复制来扩展读性能 使用分片来扩展写性能 键的过期时间 对于散列表这种容器，只能为整个键设置过期时间（整个散列表），而不能为键里面的单个元素设置过期时间。","articleStatus":0,"articlePermalink":"/articles/2018/05/29/1527552000137.html","articleImg1URL":"https://b3logfile.com/bing/20190425.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}